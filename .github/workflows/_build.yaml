name: Reusable Docker Build & Push

on:
  workflow_call:
    inputs:
      image-name-dockerhub:
        required: true
        type: string
      image-name-github:
        required: true
        type: string

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      matrix:
        registry:
          - "ghcr.io"
          - "docker.io"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ matrix.registry }}
        if: matrix.registry == 'ghcr.io' && github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ matrix.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into registry ${{ matrix.registry }}
        if: matrix.registry == 'docker.io' && github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ matrix.registry }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata (DockerHub)
        id: meta-dockerhub
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.registry }}/${{ inputs.image-name-dockerhub }}

      - name: Extract Docker metadata (GHCR)
        id: meta-ghcr
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.registry }}/${{ inputs.image-name-github }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-dockerhub.outputs.tags }}
          labels: ${{ steps.meta-dockerhub.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta-dockerhub.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
